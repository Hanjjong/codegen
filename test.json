{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://3.35.149.29:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "login",
      "description": "login"
    },
    {
      "name": "admin",
      "description": "admin API"
    },
    {
      "name": "search",
      "description": "search API group"
    },
    {
      "name": "sample",
      "description": "sample API group"
    },
    {
      "name": "group",
      "description": "group API"
    },
    {
      "name": "member",
      "description": "member API"
    }
  ],
  "paths": {
    "/v3/search/select": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "getSelectCadetInfo API",
        "description": "검색된 카뎃 선택시 정보 파싱",
        "operationId": "getSelectCadetInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchCadet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "get 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                }
              }
            }
          }
        }
      }
    },
    "/v3/member/status-msg": {
      "get": {
        "tags": [
          "member"
        ],
        "summary": "get member status message",
        "description": "맴버 상태 메시지 조회 API",
        "operationId": "getPersonalMsg",
        "parameters": [
          {
            "name": "cookie",
            "in": "cookie",
            "description": "DB 에서 맴버 조회를 위한 key get 용도"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "맴버의 상태 메시지 반환",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                }
              }
            }
          },
          "401": {
            "description": "쿠키나 DB에 저장된 맴버의 토큰이 없을 경우",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "member"
        ],
        "summary": "post member personal status message",
        "description": "맴버 상태 메시지 설정 API",
        "operationId": "updatePersonalMsg",
        "parameters": [
          {
            "name": "cookie",
            "in": "cookie",
            "description": "DB 에서 맴버 조회를 위한 key get 용도"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "맴버의 상태 메시지 반환",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "쿠키나 DB에 저장된 맴버의 토큰이 없을 경우",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/member/location": {
      "get": {
        "tags": [
          "member"
        ],
        "summary": "get member location",
        "description": "멤버 위치 설정 가능 여부 조회 API",
        "operationId": "checkLocate",
        "parameters": [
          {
            "name": "cookie",
            "in": "cookie",
            "description": "DB 에서 맴버 조회를 위한 key get 용도"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "설정 가능 반환 여부",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "등록되지 않은 맴버일 경우",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "맴버가 퇴근 상태이거나, 아이맥 자리 정보가 있을 시",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "24hane API 정상 정보 조회 불가능 시",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "member"
        ],
        "summary": "post member location",
        "description": "멤버 위치 설정 API",
        "operationId": "updateLocate",
        "parameters": [
          {
            "name": "cookie",
            "in": "cookie",
            "description": "DB 에서 맴버 조회를 위한 key get 용도"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Locate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "맴버 위치 설정 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                }
              }
            }
          },
          "401": {
            "description": "등록되지 않은 맴버일 경우",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/member/friend": {
      "get": {
        "tags": [
          "member"
        ],
        "summary": "get all friends list",
        "description": "모든 친구 조회 API",
        "operationId": "getAllDefaultFriends",
        "parameters": [
          {
            "name": "cookie",
            "in": "cookie",
            "description": "DB 에서 맴버 조회를 위한 key get 용도"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "친구 리스트 조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                }
              }
            }
          },
          "401": {
            "description": "등록되지 않은 맴버일 경우",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "member"
        ],
        "summary": "create friend",
        "description": "친구 생성 API",
        "operationId": "createFriend",
        "parameters": [
          {
            "name": "cookie",
            "in": "cookie",
            "description": "DB 에서 맴버 조회를 위한 key get 용도"
          },
          {
            "name": "friedName",
            "in": "query",
            "description": "친구 카뎃 intra id"
          },
          {
            "name": "imageUrl",
            "in": "query",
            "description": "image URL"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "friendName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "img",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "친구 추가 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                }
              }
            }
          },
          "401": {
            "description": "등록되지 않은 맴버일 경우",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "이미 등록된 친구",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "member"
        ],
        "summary": "delete friends list",
        "description": "친구 삭제 API",
        "operationId": "deleteFriends",
        "parameters": [
          {
            "name": "cookie",
            "in": "cookie",
            "description": "DB 에서 맴버 조회를 위한 key get 용도"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "친구 삭제 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                }
              }
            }
          },
          "401": {
            "description": "등록되지 않은 맴버일 경우",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/member/eval": {
      "post": {
        "tags": [
          "member"
        ],
        "summary": "post Eval button",
        "description": "동료평가 정보 설정 API",
        "operationId": "updateEvalOn",
        "parameters": [
          {
            "name": "cookie",
            "in": "cookie",
            "description": "DB 에서 맴버 조회를 위한 key get 용도"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "동료평가 상태 설정 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                }
              }
            }
          },
          "401": {
            "description": "등록되지 않은 맴버일 경우",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "퇴근한 맴버일 경우",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/member/": {
      "post": {
        "tags": [
          "member"
        ],
        "summary": "createMember API",
        "description": "맴버 생성 하는 POST API",
        "operationId": "createMember",
        "parameters": [
          {
            "name": "session",
            "in": "header",
            "description": "맴버 확인용 세션"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Seoul42"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "맴버 성공 메세지",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/group/{groupId}/friend": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "get group friend list API",
        "description": "멤버가 등록한 그룹 내의 모든 친구 목록 조회",
        "operationId": "getIncludeGroupFriendNames",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "조회를 원하는 그룹 ID",
            "required": true,
            "schema": {
              "type": "Long"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 200,
                      "responseMsg": "조회 성공",
                      "data": [
                        "친구1",
                        "친구2",
                        "친구3"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "존재하지 않는 그룹",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 400,
                      "responseMsg": "데이터를 찾을 수 없음"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "group"
        ],
        "summary": "add friends to group API",
        "description": "친구 리스트를 받아서 해당 그룹에 일괄 추가",
        "operationId": "addFriendsToGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "친구를 추가할 그룹 ID",
            "required": true,
            "schema": {
              "type": "Long"
            }
          }
        ],
        "requestBody": {
          "description": "추가하려는 친구 이름 리스트",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "친구 일괄 추가 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 201,
                      "responseMsg": "그룹에 친구 추가 성공"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "존재하지 않는 그룹",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 400,
                      "responseMsg": "데이터를 찾을 수 없음"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "group"
        ],
        "summary": "delete group friend API",
        "description": "친구 리스트를 받아서 해당 그룹에서 일괄 삭제함. 이때, 친구 리스트는 모두 해당 그룹에 속해있어야 함",
        "operationId": "removeIncludeGroupFriends",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "그룹 id",
            "required": true,
            "schema": {
              "type": "Long"
            }
          }
        ],
        "requestBody": {
          "description": "삭제하려는 친구 이름 리스트",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 200,
                      "responseMsg": "그룹에서 친구 삭제 성공"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "존재하지 않는 그룹",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 400,
                      "responseMsg": "데이터를 찾을 수 없음"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/group/": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "get group list with friend API",
        "description": "멤버가 만든 그룹 & 그룹 내의 친구 리스트 조회(메인화면 용)",
        "operationId": "getGroupsWithFriend",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "멤버 id",
            "required": true,
            "schema": {
              "type": "Long"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 200,
                      "responseMsg": "조회 성공",
                      "data": [
                        {
                          "groupId": 2,
                          "groupName": "즐겨찾기",
                          "count": 0,
                          "groupFriends": []
                        },
                        {
                          "groupId": 3,
                          "groupName": "그룹1",
                          "count": 2,
                          "groupFriends": [
                            "친구1",
                            "친구2"
                          ]
                        },
                        {
                          "groupId": 4,
                          "groupName": "그룹2",
                          "count": 1,
                          "groupFriends": [
                            "친구1"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "group"
        ],
        "summary": "create new group API",
        "description": "그룹 생성",
        "operationId": "createCustomGroup",
        "parameters": [
          {
            "name": "key",
            "in": "cookie",
            "description": "Token 내의 ID 값"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "그룹 이름",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "그룹 생성 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 201,
                      "responseMsg": "그룹 생성 성공",
                      "data": [
                        "groupId",
                        "groupName"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "등록되지 않은 카뎃",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 401,
                      "responseMsg": "등록되지 않은 카뎃"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "그룹 이름 중복",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "example3": {
                    "description": "example3",
                    "value": {
                      "statusCode": 409,
                      "responseMsg": "그룹 이름 중복"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/event/": {
      "post": {
        "tags": [
          "event"
        ],
        "summary": "checkEvent API",
        "description": "이벤트 param 및 당첨 결과 확인",
        "operationId": "checkEvent",
        "parameters": [
          {
            "name": "key",
            "in": "cookie",
            "description": "key in Token"
          },
          {
            "name": "param",
            "in": "query",
            "description": "확인할 이벤트 param",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "당첨 여부 반환 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                }
              }
            }
          },
          "400": {
            "description": "이벤트와 일치하지 않는 param",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/auth/token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "makeToken API",
        "description": "42api Access Token발급",
        "operationId": "makeToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "로그인 성공 가능",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "등록 되지않은 멤버",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/admin/secret-member": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "update secret_id for user API",
        "description": "사용자용 42api secret_id DB 갱신",
        "operationId": "updateServerSecret",
        "requestBody": {
          "description": "갱신할 secret id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyValueInfo"
              },
              "example": {
                "secret": "secret id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "갱신 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "example": {
                  "statusCode": 200,
                  "responseMsg": "시크릿 아이디 갱신 성공"
                }
              }
            }
          },
          "401": {
            "description": "세션이 만료된 경우 발생",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SessionExpiredException"
                },
                "example": {
                  "statusCode": 401,
                  "responseMsg": "세션 없음"
                }
              }
            }
          }
        }
      }
    },
    "/v3/admin/secret-admin": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "update secret_id for admin API",
        "description": "관리자용 42api secret_id DB 갱신",
        "operationId": "updateAdminServerSecret",
        "requestBody": {
          "description": "갱신할 secret id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyValueInfo"
              },
              "example": {
                "secret": "secret id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "갱신 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "example": {
                  "statusCode": 200,
                  "responseMsg": "관리자 로그인 성공"
                }
              }
            }
          },
          "401": {
            "description": "세션이 만료된 경우 발생",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SessionExpiredException"
                },
                "example": {
                  "statusCode": 401,
                  "responseMsg": "세션 없음"
                }
              }
            }
          }
        }
      }
    },
    "/v3/admin/login": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "admin login API",
        "description": "관리자 로그인 및 세션 생성",
        "operationId": "adminLogin",
        "parameters": [
          {
            "name": "session",
            "in": "query",
            "description": "관리자 세션 생성용 세션"
          }
        ],
        "requestBody": {
          "description": "관리자 로그인용 Id 및 PWD",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "로그인 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "example": {
                  "statusCode": 200,
                  "responseMsg": "관리자 로그인 성공"
                }
              }
            }
          },
          "401": {
            "description": "일치하는 관리자 없음",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AdminLoginFailException"
                },
                "example": {
                  "statusCode": 401,
                  "responseMsg": "관리자 로그인 실패"
                }
              }
            }
          }
        }
      }
    },
    "/v3/admin/image": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "reset all cadet's image API",
        "description": "블랙홀 인원 제외 모든 카뎃들의 이미지 url 갱신 (새로운 기수 들어올 시 필수)",
        "operationId": "getAllCadetImages",
        "responses": {
          "200": {
            "description": "이미지 갱신 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "example": {
                  "statusCode": 200,
                  "responseMsg": "이미지 저장 성공"
                }
              }
            }
          },
          "401": {
            "description": "세션이 만료된 경우 발생",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SessionExpiredException"
                },
                "example": {
                  "statusCode": 401,
                  "responseMsg": "세션 없음"
                }
              }
            }
          }
        }
      }
    },
    "/v3/admin/hane/token": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "insert 24hane token API",
        "description": "24hane access token DB 저장. 토큰 만료 시 24hane 담당자(현재 joopark)에게 연락하여 갱신",
        "operationId": "insertHane",
        "requestBody": {
          "description": "갱신할 토큰",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyValueInfo"
              },
              "example": {
                "token": "갱신할 토큰"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "갱신 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "example": {
                  "statusCode": 200,
                  "responseMsg": "하네 토큰 갱신 성공"
                }
              }
            }
          },
          "401": {
            "description": "세션이 만료된 경우 발생",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SessionExpiredException"
                },
                "example": {
                  "statusCode": 401,
                  "responseMsg": "세션 없음"
                }
              }
            }
          }
        }
      }
    },
    "/v3/admin/createdAt": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "insert all cadet's piscine start date API",
        "description": "모든 카뎃들의 피신 시작일 삽입",
        "operationId": "getAllCadetCreateAt",
        "responses": {
          "200": {
            "description": "피신 시작일 삽입 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "example": {
                  "statusCode": 200,
                  "responseMsg": "피신 시작일 삽입 성공"
                }
              }
            }
          },
          "401": {
            "description": "세션이 만료된 경우 발생",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SessionExpiredException"
                },
                "example": {
                  "statusCode": 401,
                  "responseMsg": "세션 없음"
                }
              }
            }
          }
        }
      }
    },
    "/v3/admin/auth/token": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "insert admin token API",
        "description": "관리자 access token DB 저장",
        "operationId": "insertAdminToken",
        "requestBody": {
          "description": "42api 요청용 code",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyValueInfo"
              },
              "example": {
                "code": "42api 요청용 code"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "갱신 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "example": {
                  "statusCode": 200,
                  "responseMsg": "관리자 토큰 갱신 성공"
                }
              }
            }
          },
          "401": {
            "description": "세션이 만료된 경우 발생",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SessionExpiredException"
                },
                "example": {
                  "statusCode": 401,
                  "responseMsg": "세션 없음"
                }
              }
            }
          }
        }
      }
    },
    "/sample": {
      "get": {
        "tags": [
          "sample"
        ],
        "summary": "getSample API",
        "description": "get api 샘플입니다",
        "operationId": "getSample",
        "parameters": [
          {
            "name": "req",
            "in": "header",
            "description": "request for session"
          },
          {
            "name": "res",
            "in": "header",
            "description": "response for session"
          },
          {
            "name": "key",
            "in": "cookie",
            "description": "key in Token"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sample"
        ],
        "summary": "createSample API",
        "description": "post api 샘플입니다",
        "operationId": "createSample",
        "parameters": [
          {
            "name": "req",
            "in": "header",
            "description": "request for session"
          },
          {
            "name": "res",
            "in": "header",
            "description": "response for session"
          },
          {
            "name": "key",
            "in": "cookie",
            "description": "key in Token"
          },
          {
            "name": "sampleName",
            "in": "query",
            "description": "request for session",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "post 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                }
              }
            }
          }
        }
      }
    },
    "/v3/group/{groupId}": {
      "delete": {
        "tags": [
          "group"
        ],
        "summary": "delete group API",
        "description": "그룹 삭제",
        "operationId": "deleteGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "삭제할 그룹 id",
            "required": true,
            "schema": {
              "type": "Long"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "삭제 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 200,
                      "responseMsg": "그룹 삭제 성공",
                      "data": [
                        {
                          "groupId": 3
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "존재하지 않는 그룹",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 400,
                      "responseMsg": "데이터를 찾을 수 없음"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "group"
        ],
        "summary": "modify group name API",
        "description": "그룹 이름 수정",
        "operationId": "updateGroupName",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "이름을 변경할 그룹 id",
            "required": true,
            "schema": {
              "type": "Long"
            }
          }
        ],
        "requestBody": {
          "description": "변경할 새로운 이름",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "그룹 이름 변경 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 200,
                      "responseMsg": "그룹 이름 변경 성공",
                      "data": [
                        {
                          "groupId": 3,
                          "changeName": "그룹1"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "존재하지 않는 그룹",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "example2": {
                    "description": "example2",
                    "value": {
                      "statusCode": 400,
                      "responseMsg": "데이터를 찾을 수 없음"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "그룹 이름 중복",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "example3": {
                    "description": "example3",
                    "value": {
                      "statusCode": 409,
                      "responseMsg": "그룹 이름 중복"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/search/": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "search API",
        "description": "멤버 검색 api",
        "operationId": "search42UserResponse",
        "parameters": [
          {
            "name": "key",
            "in": "cookie",
            "description": "key in Token"
          },
          {
            "name": "begin",
            "in": "query",
            "description": "begin 인자로 시작하는 이름",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "카뎃 검색 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                }
              }
            }
          },
          "401": {
            "description": "등록되지 않은 멤버",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/member/info": {
      "get": {
        "tags": [
          "member"
        ],
        "summary": "get member information",
        "description": "맴버 프로필과 현재 위치를 조회하는 API",
        "operationId": "memberInformation",
        "parameters": [
          {
            "name": "cookie",
            "in": "cookie",
            "description": "DB 에서 맴버 조회를 위한 key get 용도"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "맴버 정보에 대한 DTO 반환",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                }
              }
            }
          },
          "401": {
            "description": "쿠키나 DB에 저장된 맴버의 토큰이 없을 경우",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/home/": {
      "get": {
        "tags": [
          "login"
        ],
        "summary": "home API",
        "description": "로그인 여부 조회",
        "operationId": "home",
        "parameters": [
          {
            "name": "key",
            "in": "cookie",
            "description": "key in Token"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "로그인 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "등록되지 않은 멤버",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/group/{groupId}/friend/not-include/": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "get not included friends in group API",
        "description": "그룹에 포함되지 않은 친구 목록을 조회. 그룹에 새로운 친구를 추가하기 위함이다. 이때, 조회되는 친구들은 멤버가 친구로 등록하되 해당 그룹에 등록되지 않은 친구들이다.",
        "operationId": "getNotIncludeGroupFriendNames",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "그룹 ID",
            "required": true,
            "schema": {
              "type": "Long"
            }
          },
          {
            "name": "key",
            "in": "cookie",
            "description": "Token 내의 ID 값"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 200,
                      "responseMsg": "조회 성공",
                      "data": [
                        "친구1",
                        "친구2",
                        "친구3"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "존재하지 않는 그룹",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 400,
                      "responseMsg": "존재하지 않는 그룹"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "등록되지 않은 카뎃",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 401,
                      "responseMsg": "등록되지 않은 카뎃"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/group/list": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "get group list API",
        "description": "기본 그룹을 제외하고 멤버가 가지고 있는 모든 그룹(즐겨찾기 포함) 반환",
        "operationId": "getGroupsExceptDefault",
        "parameters": [
          {
            "name": "key",
            "in": "cookie",
            "description": "Token 내의 ID 값"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 200,
                      "responseMsg": "조회 성공",
                      "data": [
                        {
                          "groupId": 2,
                          "groupName": "즐겨찾기"
                        },
                        {
                          "groupId": 3,
                          "groupName": "그룹1"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "등록되지 않은 카뎃",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "example1": {
                    "description": "example1",
                    "value": {
                      "statusCode": 401,
                      "responseMsg": "등록되지 않은 카뎃"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/auth/permission": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "permission API",
        "description": "동의 페이지 접근 가능 여부",
        "operationId": "checkAgree",
        "parameters": [
          {
            "name": "key",
            "in": "cookie",
            "description": "key in Token"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "동의 페이지 접근 가능",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "409": {
            "description": "이미 등록된 멤버",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/auth/login": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "login API",
        "description": "비로그인, 세션없는 유저 로그인 확인",
        "operationId": "login",
        "parameters": [
          {
            "name": "key",
            "in": "cookie",
            "description": "key in Token"
          },
          {
            "name": "ID",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "등록되어 있는 멤버",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "등록되지 않은 멤버",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/auth/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "logout API",
        "description": "로그아웃",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "로그아웃 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/v3/admin/logout": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "admin logout API",
        "description": "관리자 로그아웃(세션 삭제)",
        "operationId": "adminLogout",
        "responses": {
          "200": {
            "description": "로그아웃 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "example": {
                  "statusCode": 200,
                  "responseMsg": "관리자 로그아웃 성공"
                }
              }
            }
          }
        }
      }
    },
    "/v3/admin/incluster": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "update all cadet in cluster API",
        "description": "클러스터 아이맥에 로그인 해 있는 모든 카뎃들의 정보 갱신",
        "operationId": "findAllInClusterCadet",
        "responses": {
          "200": {
            "description": "정보 저장 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "example": {
                  "statusCode": 200,
                  "responseMsg": "클러스터 아이맥 로그인 카뎃 갱신 성공"
                }
              }
            }
          },
          "401": {
            "description": "세션이 만료된 경우 발생",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SessionExpiredException"
                },
                "example": {
                  "statusCode": 401,
                  "responseMsg": "세션 없음"
                }
              }
            }
          }
        }
      }
    },
    "/v3/admin/auth/code": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "get 42api code API",
        "description": "관리자 42api application code 획득용 주소",
        "operationId": "adminAuthLogin",
        "responses": {
          "200": {
            "description": "code 획득",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/admin/member": {
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "delete member API",
        "description": "멤버 삭제시 사용하며 그룹 친구 정보 등 모두 삭제",
        "operationId": "deleteMember",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "삭제할 멤버 이름",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "삭제 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "example": {
                  "statusCode": 200,
                  "responseMsg": "멤버 삭제 성공"
                }
              }
            }
          },
          "401": {
            "description": "세션이 만료된 경우 발생",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SessionExpiredException"
                },
                "example": {
                  "statusCode": 401,
                  "responseMsg": "세션 없음"
                }
              }
            }
          }
        }
      }
    },
    "/v3/admin/flash": {
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "reset flash data API",
        "description": "모든 플래시 데이터 초기화",
        "operationId": "resetFlash",
        "responses": {
          "200": {
            "description": "초기화 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                },
                "example": {
                  "statusCode": 200,
                  "responseMsg": "플래시 디비 초기화 성공"
                }
              }
            }
          },
          "401": {
            "description": "세션이 만료된 경우 발생",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SessionExpiredException"
                },
                "example": {
                  "statusCode": 401,
                  "responseMsg": "세션 없음"
                }
              }
            }
          }
        }
      }
    },
    "/sample/{sampleId}": {
      "delete": {
        "tags": [
          "sample"
        ],
        "summary": "deleteSample API",
        "description": "delete api 샘플입니다",
        "operationId": "deleteSample",
        "parameters": [
          {
            "name": "sampleId",
            "in": "path",
            "description": "샘플 id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "delete 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithData"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Locate": {
        "type": "object",
        "properties": {
          "planet": {
            "type": "string",
            "description": "서초, 개초 클러스터 상태",
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ]
          },
          "floor": {
            "type": "integer",
            "description": "층 정보",
            "format": "int32"
          },
          "cluster": {
            "type": "integer",
            "description": "서초 클러스터",
            "format": "int32"
          },
          "spot": {
            "type": "string",
            "description": "자리정보"
          }
        },
        "description": "위치 정보"
      },
      "SearchCadet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "카뎃의 이름"
          },
          "img": {
            "type": "string",
            "description": "카뎃의 이미지"
          },
          "msg": {
            "type": "string",
            "description": "카뎃의 상태메시지"
          },
          "locate": {
            "$ref": "#/components/schemas/Locate"
          },
          "inOrOut": {
            "type": "integer",
            "description": "카뎃의 상태",
            "format": "int32"
          },
          "location": {
            "type": "string",
            "description": "카뎃의 위치"
          },
          "eval": {
            "type": "integer",
            "description": "평가",
            "format": "int32"
          },
          "member": {
            "type": "boolean"
          },
          "friend": {
            "type": "boolean"
          }
        },
        "description": "http response dto"
      },
      "ResponseWithData": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "responseMsg": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ContentDisposition": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "charset": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "deprecated": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "deprecated": true
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time",
            "deprecated": true
          },
          "readDate": {
            "type": "string",
            "format": "date-time",
            "deprecated": true
          },
          "inline": {
            "type": "boolean"
          },
          "attachment": {
            "type": "boolean"
          },
          "formData": {
            "type": "boolean"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "detailMessageArguments": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "body": {
            "$ref": "#/components/schemas/ProblemDetail"
          },
          "detailMessageCode": {
            "type": "string"
          },
          "titleMessageCode": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "properties": {
              "empty": {
                "type": "boolean"
              },
              "location": {
                "type": "string",
                "format": "uri"
              },
              "host": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "object",
                    "properties": {
                      "hostAddress": {
                        "type": "string"
                      },
                      "address": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "byte"
                        }
                      },
                      "hostName": {
                        "type": "string"
                      },
                      "linkLocalAddress": {
                        "type": "boolean"
                      },
                      "multicastAddress": {
                        "type": "boolean"
                      },
                      "anyLocalAddress": {
                        "type": "boolean"
                      },
                      "loopbackAddress": {
                        "type": "boolean"
                      },
                      "siteLocalAddress": {
                        "type": "boolean"
                      },
                      "mcglobal": {
                        "type": "boolean"
                      },
                      "mcnodeLocal": {
                        "type": "boolean"
                      },
                      "mclinkLocal": {
                        "type": "boolean"
                      },
                      "mcsiteLocal": {
                        "type": "boolean"
                      },
                      "mcorgLocal": {
                        "type": "boolean"
                      },
                      "canonicalHostName": {
                        "type": "string"
                      }
                    }
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "unresolved": {
                    "type": "boolean"
                  },
                  "hostName": {
                    "type": "string"
                  },
                  "hostString": {
                    "type": "string"
                  }
                }
              },
              "all": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "writeOnly": true
              },
              "lastModified": {
                "type": "integer",
                "format": "int64"
              },
              "contentLength": {
                "type": "integer",
                "format": "int64"
              },
              "date": {
                "type": "integer",
                "format": "int64"
              },
              "origin": {
                "type": "string"
              },
              "range": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HttpRange"
                }
              },
              "allow": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HttpMethod"
                }
              },
              "acceptCharset": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cacheControl": {
                "type": "string"
              },
              "contentLanguage": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "script": {
                    "type": "string"
                  },
                  "variant": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "unicodeLocaleAttributes": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unicodeLocaleKeys": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "displayLanguage": {
                    "type": "string"
                  },
                  "displayScript": {
                    "type": "string"
                  },
                  "displayCountry": {
                    "type": "string"
                  },
                  "displayVariant": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "extensionKeys": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "iso3Language": {
                    "type": "string"
                  },
                  "iso3Country": {
                    "type": "string"
                  }
                }
              },
              "etag": {
                "type": "string"
              },
              "contentDisposition": {
                "$ref": "#/components/schemas/ContentDisposition"
              },
              "connection": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accept": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MediaType"
                }
              },
              "acceptLanguage": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "range": {
                      "type": "string"
                    },
                    "weight": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "basicAuth": {
                "type": "string",
                "writeOnly": true
              },
              "acceptLanguageAsLocales": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "language": {
                      "type": "string"
                    },
                    "script": {
                      "type": "string"
                    },
                    "variant": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "unicodeLocaleAttributes": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unicodeLocaleKeys": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "displayLanguage": {
                      "type": "string"
                    },
                    "displayScript": {
                      "type": "string"
                    },
                    "displayCountry": {
                      "type": "string"
                    },
                    "displayVariant": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "extensionKeys": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "iso3Language": {
                      "type": "string"
                    },
                    "iso3Country": {
                      "type": "string"
                    }
                  }
                }
              },
              "acceptPatch": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MediaType"
                }
              },
              "accessControlAllowCredentials": {
                "type": "boolean"
              },
              "accessControlAllowHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlAllowMethods": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HttpMethod"
                }
              },
              "accessControlAllowOrigin": {
                "type": "string"
              },
              "accessControlExposeHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlMaxAge": {
                "type": "integer",
                "format": "int64"
              },
              "accessControlRequestHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlRequestMethod": {
                "$ref": "#/components/schemas/HttpMethod"
              },
              "bearerAuth": {
                "type": "string",
                "writeOnly": true
              },
              "expires": {
                "type": "integer",
                "format": "int64"
              },
              "ifMatch": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ifNoneMatch": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ifUnmodifiedSince": {
                "type": "integer",
                "format": "int64"
              },
              "pragma": {
                "type": "string"
              },
              "upgrade": {
                "type": "string"
              },
              "vary": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "contentType": {
                "$ref": "#/components/schemas/MediaType"
              },
              "ifModifiedSince": {
                "type": "integer",
                "format": "int64"
              }
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "HttpMethod": {
        "type": "object"
      },
      "HttpRange": {
        "type": "object"
      },
      "HttpStatusCode": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "is4xxClientError": {
            "type": "boolean"
          },
          "is5xxServerError": {
            "type": "boolean"
          },
          "is1xxInformational": {
            "type": "boolean"
          },
          "is2xxSuccessful": {
            "type": "boolean"
          },
          "is3xxRedirection": {
            "type": "boolean"
          }
        }
      },
      "MediaType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "subtype": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "qualityValue": {
            "type": "number",
            "format": "double"
          },
          "charset": {
            "type": "string"
          },
          "concrete": {
            "type": "boolean"
          },
          "wildcardType": {
            "type": "boolean"
          },
          "wildcardSubtype": {
            "type": "boolean"
          },
          "subtypeSuffix": {
            "type": "string"
          }
        }
      },
      "ProblemDetail": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "format": "uri"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string",
            "format": "uri"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string"
          }
        },
        "description": "이미지 URL"
      },
      "Seoul42": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "description": "IntraId"
          },
          "location": {
            "type": "string",
            "description": "맴버 클러스터 위치"
          },
          "image": {
            "$ref": "#/components/schemas/Image"
          },
          "created_at": {
            "type": "string",
            "description": "로그인한 클러스터 위치 서초 or 개포"
          },
          "active?": {
            "type": "boolean",
            "description": "카뎃이 로그인해 있는지에 대한 상태"
          }
        },
        "description": "42seoul API에서 get한 카뎃 정보"
      },
      "Response": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "responseMsg": {
            "type": "string"
          }
        }
      },
      "KeyValueInfo": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "{'key':'value'}",
            "example": "value"
          }
        },
        "description": "JSON 형식의 key:value"
      },
      "SessionExpiredException": {
        "type": "object",
        "properties": {
          "cause": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "classLoaderName": {
                      "type": "string"
                    },
                    "moduleName": {
                      "type": "string"
                    },
                    "moduleVersion": {
                      "type": "string"
                    },
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    },
                    "className": {
                      "type": "string"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "suppressed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stackTrace": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "classLoaderName": {
                            "type": "string"
                          },
                          "moduleName": {
                            "type": "string"
                          },
                          "moduleVersion": {
                            "type": "string"
                          },
                          "methodName": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "nativeMethod": {
                            "type": "boolean"
                          },
                          "className": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "localizedMessage": {
                      "type": "string"
                    }
                  }
                }
              },
              "localizedMessage": {
                "type": "string"
              }
            }
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "classLoaderName": {
                  "type": "string"
                },
                "moduleName": {
                  "type": "string"
                },
                "moduleVersion": {
                  "type": "string"
                },
                "methodName": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "lineNumber": {
                  "type": "integer",
                  "format": "int32"
                },
                "nativeMethod": {
                  "type": "boolean"
                },
                "className": {
                  "type": "string"
                }
              }
            }
          },
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "suppressed": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "stackTrace": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "classLoaderName": {
                        "type": "string"
                      },
                      "moduleName": {
                        "type": "string"
                      },
                      "moduleVersion": {
                        "type": "string"
                      },
                      "methodName": {
                        "type": "string"
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "lineNumber": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "nativeMethod": {
                        "type": "boolean"
                      },
                      "className": {
                        "type": "string"
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "localizedMessage": {
                  "type": "string"
                }
              }
            }
          },
          "localizedMessage": {
            "type": "string"
          }
        }
      },
      "AdminInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "이름",
            "example": "홍길동"
          },
          "passwd": {
            "type": "string",
            "description": "비밀번호",
            "example": "****"
          }
        },
        "description": "사용자 정보"
      },
      "AdminLoginFailException": {
        "type": "object",
        "properties": {
          "cause": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "classLoaderName": {
                      "type": "string"
                    },
                    "moduleName": {
                      "type": "string"
                    },
                    "moduleVersion": {
                      "type": "string"
                    },
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    },
                    "className": {
                      "type": "string"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "suppressed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stackTrace": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "classLoaderName": {
                            "type": "string"
                          },
                          "moduleName": {
                            "type": "string"
                          },
                          "moduleVersion": {
                            "type": "string"
                          },
                          "methodName": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "nativeMethod": {
                            "type": "boolean"
                          },
                          "className": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "localizedMessage": {
                      "type": "string"
                    }
                  }
                }
              },
              "localizedMessage": {
                "type": "string"
              }
            }
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "classLoaderName": {
                  "type": "string"
                },
                "moduleName": {
                  "type": "string"
                },
                "moduleVersion": {
                  "type": "string"
                },
                "methodName": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "lineNumber": {
                  "type": "integer",
                  "format": "int32"
                },
                "nativeMethod": {
                  "type": "boolean"
                },
                "className": {
                  "type": "string"
                }
              }
            }
          },
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "suppressed": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "stackTrace": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "classLoaderName": {
                        "type": "string"
                      },
                      "moduleName": {
                        "type": "string"
                      },
                      "moduleVersion": {
                        "type": "string"
                      },
                      "methodName": {
                        "type": "string"
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "lineNumber": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "nativeMethod": {
                        "type": "boolean"
                      },
                      "className": {
                        "type": "string"
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "localizedMessage": {
                  "type": "string"
                }
              }
            }
          },
          "localizedMessage": {
            "type": "string"
          }
        }
      }
    }
  }
}
